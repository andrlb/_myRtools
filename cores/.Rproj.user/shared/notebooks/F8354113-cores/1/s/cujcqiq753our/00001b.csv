"0",""
"0","# Calculate the number of rows and columns in the grid"
"0","n <- ceiling(sqrt(length(cores)))"
"0",""
"0","# Create a grid of positions manually to preserve the order"
"0","x <- rep(1:n, each = n)"
"0","y <- rev(rep(1:n, times = n))  # Reverse the y positions here"
"0","grid <- data.frame(x = x[1:length(cores)], y = y[1:length(cores)])"
"0",""
"0","# Create a data frame with the colors and positions"
"0","df <- data.frame("
"0","  color = factor(names(cores), levels = names(cores)),  # Keep the original order of colors"
"0","  count = rep(1, length(cores)),  # Equal count for each color"
"0","  x = grid$x,  # x position"
"0","  y = grid$y  # y position"
"0",")"
"0",""
"0","# Function to calculate the luminance of a color"
"0","luminance <- function(color) {"
"0","  rgb <- col2rgb(cores[[color]])"
"0","  0.299*rgb[1,] + 0.587*rgb[2,] + 0.114*rgb[3,]"
"0","}"
"0",""
"0","# Function to choose a readable color for the text"
"0","text_color <- function(color) {"
"0","  ifelse(luminance(color) > 128, ""black"", ""white"")"
"0","}"
"0",""
"0","# Create the plot with squares"
"0","p <- ggplot(df, aes(x = x, y = y, fill = color)) +"
"0","  geom_tile(color = ""black"", lwd = 0.5) +  # Create the squares"
"0","  # geom_text(aes(label = color, color = sapply(color, text_color)), size = 4) +  # Add the color names"
"0","  geom_text(aes(label = paste(color, ""\n"", cores[color], sep = """"), color = sapply(color, text_color)), size = 2.5) +  # Add color names and RGB codes"
"0","  scale_fill_manual(values = unlist(cores)) +  # Use the color palette"
"0","  scale_color_identity() +  # Use the color specified in geom_text"
"0","  theme_void() +  # Remove axes and labels"
"0","  theme(plot.background = element_rect(fill = ""black""),  # Set the background to black"
"0","        legend.position = ""none"")  # Remove the legend"
"0",""
"0","# Display the plot"
"0","plot(p)"
